#!/usr/bin/env python3

from argparse import ArgumentParser, Namespace
from subprocess import PIPE, run
from sys import argv, stdin
from typing import List


def call_into(prog: str, *args: List[str]) -> bytes:
  ret = run([prog, *args], stdout=PIPE)
  if ret.returncode != 0:
    exit(ret.returncode)
  else:
    return ret.stdout


def spit(text: str, path: str) -> None:
  with open(path, "w") as fd:
    path.write(text)


def parse_args() -> Namespace:
  parser = ArgumentParser()
  parser.add_argument("domain")
  parser.add_argument("state")
  parser.add_argument("extra", nargs="*")
  return parser.parse_args()


def main() -> None:
  args = parse_args()
  data: str = stdin.read()
  spit(str(args), "/vmrc/args")
  spit(data, "/vmrc/stdin")


main()

