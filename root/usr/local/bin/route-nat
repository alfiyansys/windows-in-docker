#!/usr/bin/env python3

from enum import Enum
from argparse import ArgumentParser, Namespace
from ipaddress import IPv4Address, ip_address
from os import environ
from subprocess import run
from typing import List


class State(Enum):
  on = "on"
  off = "off"


def call(prog: str, *args: List[str]) -> bytes:
  ret = run([prog, *args])
  if ret.returncode != 0:
    exit(ret.returncode)


def parse_args() -> Namespace:
  parser = ArgumentParser()
  parser.add_argument("--bridge", required=True)
  parser.add_argument("--ip", required=True, type=ip_address)
  parser.add_argument("--state", required=True,
                      choices=(State.on, State.off), type=State)
  return parser.parse_args()


def ip_table(ip: IPv4Address, port: int) -> None:
  ["iptables",
   "--table", "filter",
   "--append", "FORWARD",
   "--protocol", "all",
   "--jump", "ACCEPT",
   "--destination", str(ip),
   "--destination-port", str(port)]

  ["iptables",
   "--table", "nat",
   "--append", "PREROUTING",
   "--protocol", "all",
   "--jump", "DNAT",
   "--to-destination", f"{ip}:{port}",
   "--destination-port", str(port)]


def main() -> None:
  args = parse_args()
  print(args)


main()

